(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return d}));var r=n(3),c=n(7),a=(n(0),n(99)),i={title:"What is Ceramic?",slug:"/concepts/ceramic"},o={unversionedId:"core-concepts-ceramic",id:"core-concepts-ceramic",isDocsHomePage:!1,title:"What is Ceramic?",description:"In IDX, Ceramic is a decentralized network used for storing DIDs (such as 3ID) and IDX documents including indexes, definitions, references, and schemas. IDX uses the Ceramic API, which is exposed by the js-ceramic client.",source:"@site/docs/core-concepts-ceramic.md",slug:"/concepts/ceramic",permalink:"/docs/concepts/ceramic",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/core-concepts-ceramic.md",version:"current",sidebar:"docs",previous:{title:"What is a Schema?",permalink:"/docs/concepts/schema"},next:{title:"Getting Started",permalink:"/docs/libs-getting-started"}},s=[{value:"Core Concepts",id:"core-concepts",children:[{value:"Network",id:"network",children:[]},{value:"Documents",id:"documents",children:[]},{value:"DocID",id:"docid",children:[]}]},{value:"Further Reading",id:"further-reading",children:[]}],u={rightToc:s};function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"In IDX, ",Object(a.b)("strong",{parentName:"p"},"Ceramic")," is a decentralized network used for storing DIDs (such as ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/dids"}),"3ID"),") and IDX documents including ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/index"}),"indexes"),", ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/definition"}),"definitions"),", ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/reference"}),"references"),", and ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/schema"}),"schemas"),". IDX uses the Ceramic API, which is exposed by the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/js-ceramic"}),Object(a.b)("inlineCode",{parentName:"a"},"js-ceramic")," client"),"."),Object(a.b)("h2",{id:"core-concepts"},"Core Concepts"),Object(a.b)("h3",{id:"network"},"Network"),Object(a.b)("p",null,"Ceramic is a decentralized and permissionless network for managing mutable, verifiable documents in a global context. Anyone can run a Ceramic node and join the public network to query and/or write documents."),Object(a.b)("h3",{id:"documents"},"Documents"),Object(a.b)("p",null,"A document is a representation of structured data on the Ceramic network along with its metadata. IDX provides various high-level interfaces interacting with these documents."),Object(a.b)("h3",{id:"docid"},"DocID"),Object(a.b)("p",null,"A document identifier (DocID) is a URL that uniquely represents a document on Ceramic. Multiple APIs in IDX use DocIDs as inputs and/or outputs."),Object(a.b)("h2",{id:"further-reading"},"Further Reading"),Object(a.b)("p",null,"For more information on Ceramic, view the Ceramic ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://ceramic.network"}),"website")," or ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/ceramic"}),"Github"),"."))}d.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),c=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var u=c.a.createContext({}),d=function(e){var t=c.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return c.a.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},l=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(n),l=r,b=p["".concat(i,".").concat(l)]||p[l]||m[l]||a;return n?c.a.createElement(b,o(o({ref:t},u),{},{components:n})):c.a.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=l;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<a;u++)i[u]=n[u];return c.a.createElement.apply(null,i)}return c.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"}}]);