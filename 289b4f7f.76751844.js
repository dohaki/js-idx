(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return s}));var i=n(3),a=n(7),c=(n(0),n(99)),r={title:"Interfaces and types"},o={unversionedId:"libs-types",id:"libs-types",isDocsHomePage:!1,title:"Interfaces and types",description:"CeramicApi",source:"@site/docs/libs-types.md",slug:"/libs-types",permalink:"/docs/libs-types",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/libs-types.md",version:"current",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/libs-getting-started"},next:{title:"IDX Tools library",permalink:"/docs/libs-tools"}},b=[{value:"CeramicApi",id:"ceramicapi",children:[]},{value:"DID",id:"did",children:[]},{value:"DIDProvider",id:"didprovider",children:[]},{value:"Doctype",id:"doctype",children:[]},{value:"JWSSignature",id:"jwssignature",children:[]},{value:"DocID",id:"docid",children:[]},{value:"IndexKey",id:"indexkey",children:[]},{value:"Schema",id:"schema",children:[]},{value:"Definition",id:"definition",children:[]},{value:"DefinitionsAliases",id:"definitionsaliases",children:[]},{value:"ContentEntry",id:"contententry",children:[]},{value:"IdentityIndexContent",id:"identityindexcontent",children:[]},{value:"EncodedDagJWS",id:"encodeddagjws",children:[]},{value:"EncodedDagJWSResult",id:"encodeddagjwsresult",children:[]},{value:"DefinitionName",id:"definitionname",children:[]},{value:"SignedDefinitions",id:"signeddefinitions",children:[]},{value:"PublishedDefinitions",id:"publisheddefinitions",children:[]},{value:"SchemaName",id:"schemaname",children:[]},{value:"SignedSchemas",id:"signedschemas",children:[]},{value:"PublishedSchemas",id:"publishedschemas",children:[]},{value:"PublishedConfig",id:"publishedconfig",children:[]},{value:"PublishDoc",id:"publishdoc",children:[]},{value:"DefinitionDoc",id:"definitiondoc",children:[]},{value:"SchemaDoc",id:"schemadoc",children:[]},{value:"IDXOptions",id:"idxoptions",children:[]},{value:"CreateOptions",id:"createoptions",children:[]}],d={rightToc:b};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(i.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"ceramicapi"},"CeramicApi"),Object(c.b)("p",null,"Ceramic API interface exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.ceramic.network/modules/_ceramicnetwork_common.html"}),Object(c.b)("inlineCode",{parentName:"a"},"@ceramicnetwork/common")," library")),Object(c.b)("h2",{id:"did"},"DID"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"DID")," instance exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/js-did"}),Object(c.b)("inlineCode",{parentName:"a"},"dids")," library")),Object(c.b)("h2",{id:"didprovider"},"DIDProvider"),Object(c.b)("p",null,"DID Provider interface exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/js-did"}),Object(c.b)("inlineCode",{parentName:"a"},"dids")," library")),Object(c.b)("h2",{id:"doctype"},"Doctype"),Object(c.b)("p",null,"Doctype interface exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.ceramic.network/modules/_ceramicnetwork_common.html"}),Object(c.b)("inlineCode",{parentName:"a"},"@ceramicnetwork/common")," library")),Object(c.b)("h2",{id:"jwssignature"},"JWSSignature"),Object(c.b)("p",null,"JWS Signature interface exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/ceramicnetwork/js-did"}),Object(c.b)("inlineCode",{parentName:"a"},"dids")," library")),Object(c.b)("h2",{id:"docid"},"DocID"),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"DocID")," instance exported by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.ceramic.network/modules/_ceramicnetwork_docid.html"}),Object(c.b)("inlineCode",{parentName:"a"},"@ceramicnetwork/docid")," library")),Object(c.b)("h2",{id:"indexkey"},"IndexKey"),Object(c.b)("p",null,"An opaque key used to identify references in the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"#identityindexcontent"}),"Identity Index")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type IndexKey = string\n")),Object(c.b)("h2",{id:"schema"},"Schema"),Object(c.b)("p",null,"A type representing a ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#schema"}),"JSON Schema")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type Schema = Record<string, unknown>\n")),Object(c.b)("h2",{id:"definition"},"Definition"),Object(c.b)("p",null,"A ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definition")," is a ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#document"}),"Ceramic Document")," describing a resource in the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#identity-index--idx"}),"Identity Index")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface Definition<T = unknown> {\n  name: string\n  schema: string\n  description: string\n  url?: string\n  family?: string\n  config?: T\n}\n")),Object(c.b)("h2",{id:"definitionsaliases"},"DefinitionsAliases"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type DefinitionsAliases = Record<string, string>\n")),Object(c.b)("h2",{id:"contententry"},"ContentEntry"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface ContentEntry {\n  key: IndexKey\n  ref: string\n  content: unknown\n}\n")),Object(c.b)("h2",{id:"identityindexcontent"},"IdentityIndexContent"),Object(c.b)("p",null,"Represents the shape of the content stored in the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#identity-index--idx"}),"Identity Index")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type IdentityIndexContent = Record<IndexKey, string>\n")),Object(c.b)("h2",{id:"encodeddagjws"},"EncodedDagJWS"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface EncodedDagJWS {\n  payload: string\n  signatures: Array<JWSSignature>\n  link: string\n}\n")),Object(c.b)("h2",{id:"encodeddagjwsresult"},"EncodedDagJWSResult"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface EncodedDagJWSResult {\n  jws: EncodedDagJWS\n  linkedBlock: string\n}\n")),Object(c.b)("h2",{id:"definitionname"},"DefinitionName"),Object(c.b)("p",null,"Name aliases of ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definitions")," provided by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-tools"}),"IDX tools library")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type DefinitionName = 'basicProfile' | 'cryptoAccountLinks' | 'threeIdKeychain'\n")),Object(c.b)("h2",{id:"signeddefinitions"},"SignedDefinitions"),Object(c.b)("p",null,"Signed ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definitions")," provided by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-tools"}),"IDX tools library")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type SignedDefinitions = Record<DefinitionName, DagJWSResult>\n")),Object(c.b)("h2",{id:"publisheddefinitions"},"PublishedDefinitions"),Object(c.b)("p",null,"Record of ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definitions")," published to ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#ceramic"}),"Ceramic")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type PublishedDefinitions = Record<DefinitionName, string>\n")),Object(c.b)("h2",{id:"schemaname"},"SchemaName"),Object(c.b)("p",null,"Names of ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#schema"}),"Schemas")," provided by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-tools"}),"IDX tools library")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type SchemaName =\n  | 'BasicProfile'\n  | 'CryptoAccounts'\n  | 'Definition'\n  | 'IdentityIndex'\n  | 'ThreeIdKeychain'\n")),Object(c.b)("h2",{id:"signedschemas"},"SignedSchemas"),Object(c.b)("p",null,"Signed ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#schema"}),"Schemas")," provided by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-tools"}),"IDX tools library")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type SignedSchemas = Record<SchemaName, DagJWSResult>\n")),Object(c.b)("h2",{id:"publishedschemas"},"PublishedSchemas"),Object(c.b)("p",null,"Record of ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#schema"}),"Schemas")," published to ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#ceramic"}),"Ceramic")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"type PublishedSchemas = Record<SchemaName, string>\n")),Object(c.b)("h2",{id:"publishedconfig"},"PublishedConfig"),Object(c.b)("p",null,Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definitions")," and ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#schema"}),"Schemas")," published to ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/terminology#ceramic"}),"Ceramic")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface PublishedConfig {\n  definitions: PublishedDefinitions\n  schemas: PublishedSchemas\n}\n")),Object(c.b)("h2",{id:"publishdoc"},"PublishDoc"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface PublishDoc<T = unknown> {\n  id?: DocID | string\n  content: T\n  controllers?: Array<string>\n  schema?: DocID | string\n}\n")),Object(c.b)("h2",{id:"definitiondoc"},"DefinitionDoc"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface DefinitionDoc extends PublishDoc<Definition> {\n  id: DocID | string\n}\n")),Object(c.b)("h2",{id:"schemadoc"},"SchemaDoc"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface SchemaDoc extends PublishDoc<Schema> {\n  name: string\n}\n")),Object(c.b)("h2",{id:"idxoptions"},"IDXOptions"),Object(c.b)("p",null,"Options used by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-idx#constructor"}),"IDX class constructor")),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface IDXOptions {\n  aliases?: DefinitionsAliases\n  autopin?: boolean\n  ceramic: CeramicApi\n}\n")),Object(c.b)("h2",{id:"createoptions"},"CreateOptions"),Object(c.b)("p",null,"Options used by the ",Object(c.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/libs-idx#set"}),Object(c.b)("inlineCode",{parentName:"a"},"set")," method")," of the ",Object(c.b)("inlineCode",{parentName:"p"},"IDX")," class"),Object(c.b)("pre",null,Object(c.b)("code",Object(i.a)({parentName:"pre"},{className:"language-ts"}),"interface CreateOptions {\n  pin?: boolean\n}\n")))}s.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},c=Object.keys(e);for(i=0;i<c.length;i++)n=c[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(i=0;i<c.length;i++)n=c[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,c=e.originalType,r=e.parentName,d=b(e,["components","mdxType","originalType","parentName"]),l=s(n),m=i,u=l["".concat(r,".").concat(m)]||l[m]||p[m]||c;return n?a.a.createElement(u,o(o({ref:t},d),{},{components:n})):a.a.createElement(u,o({ref:t},d))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var c=n.length,r=new Array(c);r[0]=m;var o={};for(var b in t)hasOwnProperty.call(t,b)&&(o[b]=t[b]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var d=2;d<c;d++)r[d]=n[d];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);