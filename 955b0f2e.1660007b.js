(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{90:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return r})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(3),i=n(7),c=(n(0),n(99)),b={title:"IDX Tools library"},r={unversionedId:"libs-tools",id:"libs-tools",isDocsHomePage:!1,title:"IDX Tools library",description:"Installation",source:"@site/docs/libs-tools.md",slug:"/libs-tools",permalink:"/docs/libs-tools",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/libs-tools.md",version:"current",sidebar:"docs",previous:{title:"Interfaces and types",permalink:"/docs/libs-types"},next:{title:"IDX library",permalink:"/docs/libs-idx"}},o=[{value:"Installation",id:"installation",children:[]},{value:"Constants",id:"constants",children:[{value:"schemas",id:"schemas",children:[]},{value:"signedDefinitions",id:"signeddefinitions",children:[]},{value:"signedSchemas",id:"signedschemas",children:[]}]},{value:"API",id:"api",children:[{value:"isSecureSchema",id:"issecureschema",children:[]},{value:"publishDoc",id:"publishdoc",children:[]},{value:"createDefinition",id:"createdefinition",children:[]},{value:"updateDefinition",id:"updatedefinition",children:[]},{value:"publishSchema",id:"publishschema",children:[]},{value:"publishIDXConfig",id:"publishidxconfig",children:[]}]}],l={rightToc:o};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"installation"},"Installation"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"npm install @ceramicstudio/idx-tools\n")),Object(c.b)("h2",{id:"constants"},"Constants"),Object(c.b)("h3",{id:"schemas"},"schemas"),Object(c.b)("p",null,"A record of the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#schema"}),Object(c.b)("inlineCode",{parentName:"a"},"Schemas")),", keyed by ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#idxschemaname"}),"IDX schema name"),":"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"BasicProfile"),": see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/ceramicnetwork/CIP/issues/32"}),"Basic Profile CIP")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"CryptoAccounts"),": see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/ceramicnetwork/CIP/issues/44"}),"Crypto Accounts CIP")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"Definition")," (CIP to be defined)"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"IdentityIndex")," see ",Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/ceramicnetwork/CIP/issues/3"}),"Identity Index CIP")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"ThreeIdKeychain"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("inlineCode",{parentName:"p"},"Record<IDXSchemaName, Schema>")),Object(c.b)("h3",{id:"signeddefinitions"},"signedDefinitions"),Object(c.b)("p",null,"A record of signed ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/terminology#definition"}),Object(c.b)("inlineCode",{parentName:"a"},"Definitions")),", keyed by ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#idxdefinitionname"}),"IDX definition name"),":"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("inlineCode",{parentName:"p"},"Record<IDXDefinitionName, DagJWSResult>")),Object(c.b)("h3",{id:"signedschemas"},"signedSchemas"),Object(c.b)("p",null,"A record of the signed ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"#schemas"}),Object(c.b)("inlineCode",{parentName:"a"},"schemas"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("inlineCode",{parentName:"p"},"Record<IDXSchemaName, DagJWSResult>")),Object(c.b)("h2",{id:"api"},"API"),Object(c.b)("h3",{id:"issecureschema"},"isSecureSchema"),Object(c.b)("p",null,"Checks if a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#schema"}),"JSON Schema")," is valid and secure according to ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/ajv-validator/ajv#security-risks-of-trusted-schemas"}),"Ajv's secure schema")),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#schema"}),Object(c.b)("inlineCode",{parentName:"a"},"schema: Schema")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("inlineCode",{parentName:"p"},"boolean")),Object(c.b)("h3",{id:"publishdoc"},"publishDoc"),Object(c.b)("p",null,"Creates or updates a document defined by the ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#publishdoc"}),Object(c.b)("inlineCode",{parentName:"a"},"PublishDoc"))," interface"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Type parameters")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("inlineCode",{parentName:"li"},"T = unknown"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#ceramicapi"}),Object(c.b)("inlineCode",{parentName:"a"},"ceramic: CeramicApi"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#publishdoc"}),Object(c.b)("inlineCode",{parentName:"a"},"doc: PublishDoc<T>")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#docid"}),Object(c.b)("inlineCode",{parentName:"a"},"Promise<DocID>"))),Object(c.b)("h3",{id:"createdefinition"},"createDefinition"),Object(c.b)("p",null,"Creates and publishes a new ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/terminology#definition"}),Object(c.b)("inlineCode",{parentName:"a"},"Definition"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#ceramicapi"}),Object(c.b)("inlineCode",{parentName:"a"},"ceramic: CeramicApi"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#definition"}),Object(c.b)("inlineCode",{parentName:"a"},"definition: Definition")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#docid"}),Object(c.b)("inlineCode",{parentName:"a"},"Promise<DocID>"))),Object(c.b)("h3",{id:"updatedefinition"},"updateDefinition"),Object(c.b)("p",null,"Similar to ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"#publishdoc"}),Object(c.b)("inlineCode",{parentName:"a"},"publishDoc"))," for an existing ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#definitiondoc"}),Object(c.b)("inlineCode",{parentName:"a"},"DefinitionDoc"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#ceramicapi"}),Object(c.b)("inlineCode",{parentName:"a"},"ceramic: CeramicApi"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#definitiondoc"}),Object(c.b)("inlineCode",{parentName:"a"},"doc: DefinitionDoc")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("inlineCode",{parentName:"p"},"Promise<boolean>")," whether the definition contents have changed"),Object(c.b)("h3",{id:"publishschema"},"publishSchema"),Object(c.b)("p",null,"Similar to ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"#publishdoc"}),Object(c.b)("inlineCode",{parentName:"a"},"publishDoc"))," for a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#schemadoc"}),Object(c.b)("inlineCode",{parentName:"a"},"SchemaDoc")),", with additional validation using ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"#validateschema"}),Object(c.b)("inlineCode",{parentName:"a"},"validateSchema"))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#ceramicapi"}),Object(c.b)("inlineCode",{parentName:"a"},"ceramic: CeramicApi"))),Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#schemadoc"}),Object(c.b)("inlineCode",{parentName:"a"},"doc: SchemaDoc")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#docid"}),Object(c.b)("inlineCode",{parentName:"a"},"Promise<DocID>"))),Object(c.b)("h3",{id:"publishidxconfig"},"publishIDXConfig"),Object(c.b)("p",null,"Publishes the signed ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/terminology#definition"}),"Definitions")," and ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"#schemas"}),"Schemas")," provided by IDX"),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Arguments")),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},Object(c.b)("a",Object(a.a)({parentName:"li"},{href:"/docs/libs-types#ceramicapi"}),Object(c.b)("inlineCode",{parentName:"a"},"ceramic: CeramicApi")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns")," ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/libs-types#idxpublishedconfig"}),Object(c.b)("inlineCode",{parentName:"a"},"Promise<IDXPublishedConfig>"))))}s.isMDXComponent=!0},99:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return O}));var a=n(0),i=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),s=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,b=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,O=p["".concat(b,".").concat(m)]||p[m]||d[m]||c;return n?i.a.createElement(O,r(r({ref:t},l),{},{components:n})):i.a.createElement(O,r({ref:t},l))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,b=new Array(c);b[0]=m;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r.mdxType="string"==typeof e?e:a,b[1]=r;for(var l=2;l<c;l++)b[l]=n[l];return i.a.createElement.apply(null,b)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);