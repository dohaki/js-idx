(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return h}));var r=n(0),c=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,c=function(e,t){if(null==e)return{};var n,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var p=c.a.createContext({}),u=function(e){var t=c.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},f=function(e){var t=u(e.components);return c.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},l=c.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),f=u(n),l=r,h=f["".concat(a,".").concat(l)]||f[l]||d[l]||o;return n?c.a.createElement(h,i(i({ref:t},p),{},{components:n})):c.a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=l;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,a[1]=i;for(var p=2;p<o;p++)a[p]=n[p];return c.a.createElement.apply(null,a)}return c.a.createElement.apply(null,n)}l.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),c=n(7),o=(n(0),n(100)),a={title:"What is a Reference?",slug:"/concepts/reference"},i={unversionedId:"core-concepts-references",id:"core-concepts-references",isDocsHomePage:!1,title:"What is a Reference?",description:"In IDX, the reference is a document created by a user which includes the actual data (or additional pointers to the data) of a dataset found in their index. The DocID of the reference is used as a value in the user's index. The key which identifies this reference in the index is the DocID of its corresponding definition.",source:"@site/docs/core-concepts-references.md",slug:"/concepts/reference",permalink:"/docs/concepts/reference",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/core-concepts-references.md",version:"current",sidebar:"docs",previous:{title:"What is a Definition?",permalink:"/docs/concepts/definition"},next:{title:"What is a Schema?",permalink:"/docs/concepts/schema"}},s=[],p={rightToc:s};function u(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In IDX, the ",Object(o.b)("strong",{parentName:"p"},"reference")," is a document created by a user which includes the actual data (or additional pointers to the data) of a dataset found in their ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/index"}),"index"),". The ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/ceramic#docid"}),"DocID")," of the reference is used as a value in the user's index. The key which identifies this reference in the index is the DocID of its corresponding ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/definition"}),"definition"),"."),Object(o.b)("p",null,"Unlike definitions which can function as a key in many indexes, references are unique to each user and each reference has a different DocID. References are usually created during the process of using an application."),Object(o.b)("p",null,"In IDX, references are stored on the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/concepts/ceramic"}),"Ceramic Network"),"."))}u.isMDXComponent=!0}}]);