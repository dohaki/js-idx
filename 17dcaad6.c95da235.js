(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{100:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return f}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=i.a.createContext({}),p=function(e){var t=i.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return i.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(n),b=r,f=s["".concat(a,".").concat(b)]||s[b]||d[b]||o;return n?i.a.createElement(f,c(c({ref:t},u),{},{components:n})):i.a.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var u=2;u<o;u++)a[u]=n[u];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},69:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),i=n(7),o=(n(0),n(100)),a={},c={unversionedId:"guides-todo",id:"guides-todo",isDocsHomePage:!1,title:"guides-todo",description:"Thinking in IDX",source:"@site/docs/guides-todo.md",slug:"/guides-todo",permalink:"/docs/guides-todo",editUrl:"https://github.com/ceramicstudio/js-idx/edit/master/website/docs/guides-todo.md",version:"current"},l=[{value:"Thinking in IDX",id:"thinking-in-idx",children:[]},{value:"During dev lifecycle",id:"during-dev-lifecycle",children:[]},{value:"App bootstrapping",id:"app-bootstrapping",children:[]},{value:"App usage",id:"app-usage",children:[]},{value:"App data discovery",id:"app-data-discovery",children:[]}],u={rightToc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"thinking-in-idx"},"Thinking in IDX"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Think as global DB: tables, rows and user ID"),Object(o.b)("li",{parentName:"ul"},"Emphasis differences")),Object(o.b)("h2",{id:"during-dev-lifecycle"},"During dev lifecycle"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create a schema for you collection (or use existing one)"),Object(o.b)("li",{parentName:"ol"},"Create a collection definition (or use existing one)")),Object(o.b)("p",null,"These will have immutable DocIDs that can be used to get/set data on the user's Identity Index"),Object(o.b)("h2",{id:"app-bootstrapping"},"App bootstrapping"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create IDW, Ceramic and IDX instances"),Object(o.b)("li",{parentName:"ol"},"Authenticate user using IDW/Ceramic - will create a 3ID with a linked Identity Index")),Object(o.b)("h2",{id:"app-usage"},"App usage"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Use IDX instance to get/set specific collections used by your app")),Object(o.b)("h2",{id:"app-data-discovery"},"App data discovery"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Add a tag for your app to the docs your app use for quick discovery"),Object(o.b)("li",{parentName:"ul"},"Create your own Definition and store references as a sub-index")))}p.isMDXComponent=!0}}]);